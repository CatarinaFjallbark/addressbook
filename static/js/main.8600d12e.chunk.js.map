{"version":3,"sources":["components/ContactCard/ContactCard.tsx","components/SearchField/SearchField.tsx","components/Sort/Sort.tsx","components/Sorry/Sorry.tsx","store/types.ts","Main.tsx","components/Detailed/Detailed.tsx","store/index.ts","index.tsx"],"names":["ContactCard","info","className","to","id","ListItem","alignItems","sx","backgroundColor","cursor","ListItemAvatar","Avatar","alt","src","img","ListItemText","primary","name","secondary","email","cell","SearchField","setValue","value","TextField","label","variant","onChange","e","target","up","toggle","onClick","Typography","component","ArrowDropUp","ArrowDropDown","SentimentVeryDissatisfied","actionTypes","App","useState","search","setSearch","showError","setShowError","asc","toggleAsc","dispatch","useDispatch","state","useSelector","sort","a","b","first","useEffect","fetch","response","json","type","loadData","data","results","console","error","length","fetchData","List","filter","toLowerCase","startsWith","last","map","i","login","picture","thumbnail","uuid","Divider","params","useParams","window","innerWidth","width","setWidth","updateWidth","addEventListener","removeEventListener","find","person","Card","p","height","CardMedia","image","large","CardContent","gutterBottom","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","TableBody","scope","align","dob","age","location","street","number","city","CardActions","href","rootReducer","action","store","createStore","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"kZAiBe,SAASA,EAAT,GAAqD,IAA9BC,EAA6B,EAA7BA,KACpC,OACE,cAAC,IAAD,CAAMC,UAAU,cAAcC,GAAE,uBAAkBF,EAAKG,IAAvD,SACE,eAACC,EAAA,EAAD,CACEC,WAAW,aACXC,GAAI,CACF,UAAW,CACTC,gBAAiB,UACjBC,OAAQ,YALd,UASE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,IAAI,aAAaC,IAAKZ,EAAKa,QAErC,cAACC,EAAA,EAAD,CACEC,QAASf,EAAKgB,KACdC,UACE,eAAC,WAAD,WACE,sBAAMhB,UAAU,eAAhB,SAAgCD,EAAKkB,QACrC,+BAAOlB,EAAKmB,iB,mBC5BX,SAASC,EAAT,GAAgE,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,MAC9C,OACE,qBAAKrB,UAAU,cAAf,SACE,cAACsB,EAAA,EAAD,CACEtB,UAAU,cACVuB,MAAM,SACNC,QAAQ,WACRH,MAAOA,EACPI,SAAU,SAACC,GAAD,OAAON,EAASM,EAAEC,OAAON,Y,qCCP5B,SAASF,EAAT,GAA2D,IAApCS,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,OACxC,OACE,sBAAK7B,UAAU,gBAAgB8B,QAASD,EAAxC,UACE,cAACE,EAAA,EAAD,CAAYP,QAAQ,KAAKQ,UAAU,MAAnC,kBAGCJ,EAAK,cAACK,EAAA,EAAD,IAAkB,cAACC,EAAA,EAAD,O,mBCXf,SAASf,IACtB,OACE,sBAAKnB,UAAU,iBAAf,UACE,cAAC+B,EAAA,EAAD,CAAYP,QAAQ,KAAKQ,UAAU,MAAnC,+BAGA,cAACG,EAAA,EAAD,O,ICgBMC,E,oCAAAA,K,sBAAAA,M,KCwEGC,MAxFf,WAQE,IAaA,EAA4BC,mBAAiB,IAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,oBAAkB,GAApD,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAyBJ,oBAAkB,GAA3C,mBAAOK,EAAP,KAAYC,EAAZ,KACMC,EAAWC,cACXC,EAAQC,aAAY,SAACD,GAAD,OAjBb,SAACA,GACZ,OAAOA,EAAME,MAAK,SAACC,EAAGC,GACpB,GAAIR,EAAK,CACP,GAAIO,EAAEnC,KAAKqC,MAAQD,EAAEpC,KAAKqC,MAAO,OAAQ,EACzC,GAAIF,EAAEnC,KAAKqC,MAAQD,EAAEpC,KAAKqC,MAAO,OAAO,MACnC,CACL,GAAIF,EAAEnC,KAAKqC,MAAQD,EAAEpC,KAAKqC,MAAO,OAAQ,EACzC,GAAIF,EAAEnC,KAAKqC,MAAQD,EAAEpC,KAAKqC,MAAO,OAAO,EAE1C,OAAO,KAQoCH,CAAKF,MAmBpD,OAjBAM,qBAAU,WAAM,4CACd,8BAAAH,EAAA,+EAG2BI,MAAM,yCAHjC,cAGUC,EAHV,gBAIwBA,EAASC,OAJjC,OAIUA,EAJV,OAKIX,EAAS,CAAEY,KAAMrB,EAAYsB,SAAUC,KAAMH,EAAKI,UALtD,kDAOIlB,GAAa,GACbmB,QAAQC,MAAR,MARJ,2DADc,sBAaO,IAAjBf,EAAMgB,QAbK,WAAD,wBAcZC,KAED,IAED,sBAAKhE,UAAU,OAAf,UACE,cAAC,EAAD,CAAaqB,MAAOkB,EAAQnB,SAAUoB,IACtC,qBAAKxC,UAAU,gBAAf,SACE,cAAC,EAAD,CAAM4B,IAAKe,EAAKd,OAAQ,kBAAMe,GAAWD,QAE3C,8BACE,cAACsB,EAAA,EAAD,UACGlB,GAASA,EAAMgB,OAAS,EACvBhB,EACGmB,QAAO,YAAe,IAAZnD,EAAW,EAAXA,KACT,OAAIwB,IAEAxB,EAAKqC,MAAMe,cAAcC,WAAW7B,EAAO4B,gBAC3CpD,EAAKsD,KAAKF,cAAcC,WAAW7B,EAAO4B,mBAK/CG,KAAI,WAAwCC,GAAxC,IAAGC,EAAH,EAAGA,MAAOtD,EAAV,EAAUA,KAAMD,EAAhB,EAAgBA,MAAOF,EAAvB,EAAuBA,KAAM0D,EAA7B,EAA6BA,QAA7B,OACH,eAAC,WAAD,WACE,cAAC,EAAD,CACE1E,KAAM,CACJmB,OACAD,QACAF,KAAK,GAAD,OAAKA,EAAKqC,MAAV,YAAmBrC,EAAKsD,MAC5BzD,IAAK6D,EAAQC,UACbxE,GAAIsE,EAAMG,QAGbJ,IAAMxB,EAAMgB,OAAS,GACpB,cAACa,EAAA,EAAD,CAASpD,QAAQ,QAAQQ,UAAU,SAXxBwC,EAAMG,SAgBzB,mCAAGlC,GAAa,cAAC,EAAD,c,mHCpEb,SAAS3C,IACtB,IAAM+E,EAASC,cAEf,EAA0BxC,mBAASyC,OAAOC,YAA1C,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAc,WAClBD,EAASH,OAAOC,aAGlB3B,qBAAU,WAER,OADA0B,OAAOK,iBAAiB,SAAUD,GAC3B,kBAAMJ,OAAOM,oBAAoB,SAAUF,MACjD,IAGH,IAAMpC,EAAQC,aAAY,SAACD,GAAD,OACxBA,EAAMuC,MAAK,SAACC,GAAD,OAAYA,EAAOf,MAAMG,OAASE,EAAO3E,SAEtD,OACE,8BACG6C,EACC,eAACyC,EAAA,EAAD,CAAMnF,GAAI,CAAEoF,EAAG,EAAGC,OAAQ,SAA1B,UACE,cAACC,EAAA,EAAD,CACEtF,GAAI,CAAEoF,EAAG,GACTzF,UAAU,gBACVgC,UAAU,MACV4D,MAAK,OAAE7C,QAAF,IAAEA,OAAF,EAAEA,EAAO0B,QAAQoB,MACtBnF,IAAI,YAEN,cAACoF,EAAA,EAAD,UACGb,EAAQ,IACP,qCACG,IACD,cAAClD,EAAA,EAAD,CAAYgE,cAAY,EAACvE,QAAQ,KAAKQ,UAAU,MAAhD,0BACMe,QADN,IACMA,OADN,EACMA,EAAOhC,KAAKqC,MADlB,mBAC2BL,QAD3B,IAC2BA,OAD3B,EAC2BA,EAAOhC,KAAKsD,QAEvC,cAAC2B,EAAA,EAAD,CAAgBhE,UAAWiE,IAA3B,SACE,eAACC,EAAA,EAAD,CAAO7F,GAAI,CAAE8F,SAAU,KAAO,aAAW,eAAzC,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,uCAGJ,eAACC,EAAA,EAAD,WACE,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWtE,UAAU,KAAKwE,MAAM,MAAhC,SACG,QAEH,cAACF,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAWG,MAAM,QAAjB,SAA0B1D,EAAM2D,IAAIC,SAEtC,eAACN,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWtE,UAAU,KAAKwE,MAAM,MAAhC,SACG,aAEH,cAACF,EAAA,EAAD,CAAWG,MAAM,UACjB,cAACH,EAAA,EAAD,CAAWG,MAAM,QAAjB,SACG1D,EAAM6D,SAASC,OAAO9F,OAEzB,cAACuF,EAAA,EAAD,CAAWG,MAAM,QAAjB,SACG1D,EAAM6D,SAASC,OAAOC,SAEzB,cAACR,EAAA,EAAD,CAAWG,MAAM,QAAjB,SACG1D,EAAM6D,SAASG,qBAQ5B,qCACE,uCAAUhE,EAAM2D,IAAIC,OACpB,uBACA,0CACU,IADV,UAEM5D,EAAM6D,SAASC,OAAO9F,KAF5B,YAEoCgC,EAAM6D,SAASC,OAAOC,OAF1D,YAEoE/D,EAAM6D,SAASG,cAKzF,eAACC,EAAA,EAAD,CAAa3G,GAAI,CAAEoF,EAAG,GAAtB,UACE,oBAAGwB,KAAI,wBAAYlE,QAAZ,IAAYA,OAAZ,EAAYA,EAAO9B,OAASjB,UAAU,kBAA7C,kBACQ,OAER,oBAAGiH,KAAI,qBAASlE,QAAT,IAASA,OAAT,EAASA,EAAO7B,MAAQlB,UAAU,kBAAzC,kBACQ,aAKZ,cAAC,EAAD,MCzGOkH,MARf,WAA2D,IAAtCnE,EAAqC,uDAA7B,GAAIoE,EAAyB,uCACxD,OAAQA,EAAO1D,OACRrB,EAAYsB,SACRyD,EAAOxD,KAEPZ,G,QCIPqE,EAAQC,YAAYH,EAAa,IAEvCI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,KAAK,eAAeC,QAAS,cAAC,EAAD,MACpC,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,QAAS,cAAC,EAAD,eAKhDC,SAASC,eAAe,W","file":"static/js/main.8600d12e.chunk.js","sourcesContent":["import React, { ReactElement, Fragment } from \"react\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport \"./ContactCard.css\";\nimport { Link } from \"react-router-dom\";\n\ntype Props = {\n  info: {\n    cell: string;\n    email: string;\n    name: string;\n    img: string;\n    id: string;\n  };\n};\nexport default function ContactCard({ info }: Props): ReactElement {\n  return (\n    <Link className=\"ContactLink\" to={`/addressbook/${info.id}`}>\n      <ListItem\n        alignItems=\"flex-start\"\n        sx={{\n          \"&:hover\": {\n            backgroundColor: \"#ECECEC\",\n            cursor: \"pointer\",\n          },\n        }}\n      >\n        <ListItemAvatar>\n          <Avatar alt=\"profilepic\" src={info.img} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={info.name}\n          secondary={\n            <Fragment>\n              <span className=\"ContactEmail\">{info.email}</span>\n              <span>{info.cell}</span>\n            </Fragment>\n          }\n        />\n      </ListItem>\n    </Link>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport \"./SearchField.css\";\n\ntype Props = {\n  value: string;\n  setValue: (val: string) => void;\n};\n\nexport default function SearchField({ setValue, value }: Props): ReactElement {\n  return (\n    <div className=\"SearchField\">\n      <TextField\n        className=\"SearchInput\"\n        label=\"Search\"\n        variant=\"outlined\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { ArrowDropUp, ArrowDropDown } from \"@mui/icons-material\";\nimport \"./Sort.css\";\n\ntype Props = {\n  up: boolean;\n  toggle: () => void;\n};\n\nexport default function SearchField({ up, toggle }: Props): ReactElement {\n  return (\n    <div className=\"SortContainer\" onClick={toggle}>\n      <Typography variant=\"h6\" component=\"div\">\n        Name\n      </Typography>\n      {up ? <ArrowDropUp /> : <ArrowDropDown />}\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { SentimentVeryDissatisfied } from \"@mui/icons-material\";\nimport \"./Sorry.css\";\n\nexport default function SearchField(): ReactElement {\n  return (\n    <div className=\"SorryContainer\">\n      <Typography variant=\"h4\" component=\"div\">\n        We have a problem\n      </Typography>\n      <SentimentVeryDissatisfied />\n    </div>\n  );\n}\n","export type Person = {\n  cell: string;\n  email: string;\n  name: {\n    first: string;\n    last: string;\n  };\n  picture: {\n    thumbnail: string;\n    large: string;\n  };\n  id: string;\n  login: {\n    uuid: string;\n  };\n  location: {\n    street: {\n      name: string;\n      number: number;\n    };\n    city: string;\n  };\n  dob: {\n    age: number;\n  };\n};\n\nexport enum actionTypes {\n  loadData = \"LOAD_DATA\",\n}\n\nexport type Action = {\n  type: actionTypes;\n  data: never[];\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect, useState, ReactElement, Fragment } from \"react\";\nimport \"./Main.css\";\nimport ContactCard from \"./components/ContactCard/ContactCard\";\nimport SearchField from \"./components/SearchField/SearchField\";\nimport Sort from \"./components/Sort/Sort\";\nimport Sorry from \"./components/Sorry/Sorry\";\nimport { Divider, List } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionTypes, Person } from \"./store/types\";\n\nfunction App(): ReactElement {\n  type Results = Record<string, any>[];\n  type Response = {\n    info: Record<string, any>;\n    results: Results;\n  };\n\n  // Function for sorting list\n  const sort = (state: Person[]): Person[] => {\n    return state.sort((a, b) => {\n      if (asc) {\n        if (a.name.first < b.name.first) return -1;\n        if (a.name.first > b.name.first) return 1;\n      } else {\n        if (a.name.first > b.name.first) return -1;\n        if (a.name.first < b.name.first) return 1;\n      }\n      return 0;\n    });\n  };\n\n  const [search, setSearch] = useState<string>(\"\");\n  const [showError, setShowError] = useState<boolean>(false);\n  const [asc, toggleAsc] = useState<boolean>(true);\n  const dispatch = useDispatch();\n  const state = useSelector((state: Person[]) => sort(state));\n\n  useEffect(() => {\n    async function fetchData() {\n      //Fetching data and add it to Redux state\n      try {\n        const response = await fetch(\"https://randomuser.me/api/?results=20\");\n        const json = (await response.json()) as Response;\n        dispatch({ type: actionTypes.loadData, data: json.results });\n      } catch (e) {\n        setShowError(true);\n        console.error(e);\n      }\n    }\n    //To avoid loading a new set of data when navigating back with React Router\n    if (state.length === 0) {\n      fetchData();\n    }\n  }, []);\n  return (\n    <div className=\"Main\">\n      <SearchField value={search} setValue={setSearch} />\n      <div className=\"SortContainer\">\n        <Sort up={!asc} toggle={() => toggleAsc(!asc)} />\n      </div>\n      <nav>\n        <List>\n          {state && state.length > 0 ? (\n            state\n              .filter(({ name }) => {\n                if (search) {\n                  return (\n                    name.first.toLowerCase().startsWith(search.toLowerCase()) ||\n                    name.last.toLowerCase().startsWith(search.toLowerCase())\n                  );\n                }\n                return true;\n              })\n              .map(({ login, cell, email, name, picture }, i) => (\n                <Fragment key={login.uuid}>\n                  <ContactCard\n                    info={{\n                      cell,\n                      email,\n                      name: `${name.first} ${name.last}`,\n                      img: picture.thumbnail,\n                      id: login.uuid,\n                    }}\n                  />\n                  {i !== state.length - 1 && (\n                    <Divider variant=\"inset\" component=\"li\" />\n                  )}\n                </Fragment>\n              ))\n          ) : (\n            <>{showError && <Sorry />}</>\n          )}\n        </List>\n      </nav>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { ReactElement, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport \"./Detailed.css\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@mui/material\";\nimport { Person } from \"../../store/types\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Typography,\n} from \"@mui/material\";\nimport Sorry from \"../Sorry/Sorry\";\n\nexport default function ContactCard(): ReactElement {\n  const params = useParams();\n\n  const [width, setWidth] = useState(window.innerWidth);\n\n  const updateWidth = () => {\n    setWidth(window.innerWidth);\n  };\n  //Updates width on resize to make component responsive\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  }, []);\n\n  //Returns the selected person from Redux\n  const state = useSelector((state: Person[]) =>\n    state.find((person) => person.login.uuid === params.id)\n  );\n  return (\n    <div>\n      {state ? (\n        <Card sx={{ p: 5, height: \"100vh\" }}>\n          <CardMedia\n            sx={{ p: 2 }}\n            className=\"DetailedMedia\"\n            component=\"img\"\n            image={state?.picture.large}\n            alt=\"profile\"\n          />\n          <CardContent>\n            {width > 750 ? (\n              <>\n                {\" \"}\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                  {`${state?.name.first} ${state?.name.last}`}\n                </Typography>\n                <TableContainer component={Paper}>\n                  <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Personal information</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {\"Age\"}\n                        </TableCell>\n                        <TableCell />\n                        <TableCell />\n                        <TableCell align=\"right\">{state.dob.age}</TableCell>\n                      </TableRow>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {\"Location\"}\n                        </TableCell>\n                        <TableCell align=\"right\"></TableCell>\n                        <TableCell align=\"right\">\n                          {state.location.street.name}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {state.location.street.number}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {state.location.city}\n                        </TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </>\n            ) : (\n              <>\n                <div>Age {state.dob.age}</div>\n                <br />\n                <div>\n                  Address{\" \"}\n                  {`${state.location.street.name} ${state.location.street.number} ${state.location.city}`}\n                </div>\n              </>\n            )}\n          </CardContent>\n          <CardActions sx={{ p: 2 }}>\n            <a href={`mailto:${state?.email}`} className=\"DetailedContact\">\n              EMAIL{\" \"}\n            </a>\n            <a href={`tel:${state?.cell}`} className=\"DetailedContact\">\n              PHONE{\" \"}\n            </a>\n          </CardActions>\n        </Card>\n      ) : (\n        <Sorry />\n      )}\n    </div>\n  );\n}\n","import { Action, actionTypes } from \"./types\";\n\nfunction rootReducer(state = [], action: Action): never[] {\n  switch (action.type) {\n    case actionTypes.loadData:\n      return action.data;\n    default:\n      return state;\n  }\n}\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Main from \"./Main\";\nimport Detailed from \"./components/Detailed/Detailed\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store\";\nimport { createStore } from \"redux\";\n\n//Creates a Redux store with empty array as initial state\nconst store = createStore(rootReducer, []);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/addressbook\" element={<Main />} />\n          <Route path=\"/addressbook/:id\" element={<Detailed />} />\n        </Routes>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}